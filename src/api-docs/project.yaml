swagger: '2.0'
info:
  version: '1.0.0'
  title: Project API
components:
  schemas:
    project:
      type: object
      required:
        - name             
      properties:
        name:
          type: string
          description: project name
        description:
          type: string
          description: project description
        createdBy:
          type: string
          description: project created by    
        address:
          type: string
          description: project address
        url:
          type: string
          description: local full filepath.
        projecttype:
          type: string
          description: project type
        assignedTo:
          type: array
          items:
            type: string
          description: project assigned to          
    uploadOtions:
      type: object

      
paths:
  /api/project/add:
    
    post:
      tags:
        [Project]
      summary: add Project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/project'
      responses:
        201:
          description: project uploaded successfully 
        400:
          description: Invalid input, inputs are missing
        500:
          description: Internal server error

  /api/project/{id}:
    put:
      tags:
        [Project]
      summary: Edit Project
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the project.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/project'
      responses:
        201:
          description: project edited successfully 
        400:
          description: Invalid input, inputs are missing
        500:
          description: Internal server error

    
  
  /api/project/allprojects:    
    get:
      tags:
        [Project]
      summary: get all projects      
      responses:
        201:
          description: All projects retrieved.        
        401:
          description: No projects founds.
        500:
          description: Internal server error.
  
  /api/project/getProjectById:
     post:
      tags:
        - Project
      summary: Get Project project Id
      description: Get Project by project Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                projectid:
                  type: string
                  description: The ID of the projectid.
                username:
                  type: string
                  description: The username of the user sending the request.
      responses:
        '201':
          description: Location retrieved.
        '401':
          description: No Location found.
        '500':
          description: Internal server error.
  
  /api/project/getProjectsByUser/{userName}:
    get:
      tags:
        [Project]
      summary: get all projects by user
      parameters:
        - name: userName
          in: path
          required: true
          description: The name of the user.
          schema:
            type: string
      responses:
        201:
          description: All projects retrieved.        
        401:
          description: No projects founds.
        500:
          description: Internal server error.
  
  /api/project/getProjectsMetaDataByUserName/{username}:
    get:
      tags:
        [Project]
      summary: get all projects by user
      parameters:
        - name: username
          in: path
          required: true
          description: The username.
          schema:
            type: string
      responses:
        201:
          description: projects retrieved.        
        401:
          description: No project founds.
        500:
          description: Internal server error.

/api/project/generatereport:
  post:
    tags:
      - Project
    summary: Generate Project Report
    description: Generates a PDF report for a specific project.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                description: The ID of the project.
              sectionImageProperties:
                type: object
                properties:
                  compressionQuality:
                    type: integer
                    description: Compression quality for images.
                  imageFactor:
                    type: integer
                    description: Image factor for the report.
              companyName:
                type: string
                description: The name of the company for which report is to be generated.
              reportType:
                type: string
                description: The type of report to be generated.
    responses:
      '200':
        description: Successful operation. The PDF report is generated and returned.
        content:
          application/pdf:
            schema:
              type: string
              format: binary
    
/api/project/generatereporthtml:
  post:
    tags:
      - Project
    summary: Generate Project Report
    description: Generates an HTML report for a specific project.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                description: The ID of the project.
              sectionImageProperties:
                type: object
                properties:
                  compressionQuality:
                    type: integer
                    description: Compression quality for images.
                  imageFactor:
                    type: integer
                    description: Image factor for the report.
              companyName:
                type: string
                description: The name of the company for which the report is to be generated.
              reportType:
                type: string
                description: The type of report to be generated.
    responses:
      '200':
        description: Successful operation. The HTML report is generated and returned.
        content:
          text/html:
            schema:
              type: string
              example: "<html><body><h1>Project Report</h1><p>This is the project report content.</p></body></html>"

/api/project/generateexcel:
  post:
      tags:
        - Project
      summary: Get ProjectExcel By project Id
      description: Get ProjectExcel By project Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                projectid:
                  type: string
                  description: The ID of the projectid.
                username:
                  type: string
                  description: The username of the user sending the request.
      responses:
      '200':
        description: Successful operation. The Excel is generated and returned.
        content:
          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
            schema:
              type: string
              format: binary

/api/project/{id}:
  delete:
      tags:
        [Project]
      summary: delete Projects by id
      parameters:
        - name: id
          in: path
          required: true
          description: The project Id.
          schema:
            type: string
      responses:
        201:
          description: project deleted successfully.        
        401:
          description: No projects founds.
        500:
          description: Internal server error.

/api/project/getProjectMetadata/{id}:
  get:
      tags:
        [Project]
      summary: get Project Metadata by id
      parameters:
        - name: id
          in: path
          required: true
          description: The project Id.
          schema:
            type: string
      responses:
        201:
          description: project Metadata found Successfully.        
        401:
          description: No projects founds.
        500:
          description: Internal server error.